jsb.plugs.socket.github 
~~~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

jsb.plugs.core.tail 
~~~~~~~~~~~~~~~~~~~ 

    tail bot results. 

jsb.plugs.socket.restserver 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    implements a REST server, soon to be adapted for use with the jsb-tornado program. 

jsb.plugs.common.topic 
~~~~~~~~~~~~~~~~~~~~~~ 

    manage topics. 

jsb.plugs.common.search 
~~~~~~~~~~~~~~~~~~~~~~~ 

    access stats data from the spider plugin. 

jsb.plugs.socket.fisheye 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

jsb.plugs.common.learn 
~~~~~~~~~~~~~~~~~~~~~~ 

    learn information items .. facts .. factoids. 

jsb.plugs.socket.confluence 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    confluence.py - jsonbot module for performing lookups on a confluence server
Copyright 2011, Richard Bateman

Special thanks to Sean B. Palmer for his phenny module; many of the ideas for
this were adapted from that plugin

http://inamidst.com/phenny/ 

jsb.plugs.core.fleet 
~~~~~~~~~~~~~~~~~~~~ 

    The fleet makes it possible to run multiple bots in one running instance.
    It is a list of bots. This plugin provides commands to manipulate this list of bots. 

jsb.plugs.socket.irccat 
~~~~~~~~~~~~~~~~~~~~~~~ 

    irccat.py - jsonbot "irccat" Module
Copyright 2011, Richard Bateman
Licensed under the New BSD License.

Written to be used in the #firebreath IRC channel: http://www.firebreath.org

To test, set up the host and port, then use something like:

echo "@taxilian I am awesome" | netcat -g0 localhost 54321

echo "#channel I am awesome" | netcat -g0 localhost 54321

you can specify multiple users (with @) and channels (with #) by seperating them
with commas.  Not that with jabber, channels tend to be treated as users
unless you set up an alias in your channel:

!irccat_add_alias #channel 

myplugs.socket 
~~~~~~~~~~~~~~ 

    this package contains all the plugins common to all drivers. 

jsb.plugs.common.remind 
~~~~~~~~~~~~~~~~~~~~~~~ 

    remind people .. say txt when somebody gets active 

jsb.plugs.socket.chatlog 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    log channels to [hour:min] <nick> txt format, only logging to files is supported right now. 

jsb.plugs.common.weather 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    show weather based on Google's weather API 

jsb.plugs.socket.lmgt 
~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

jsb.plugs.core.reverse 
~~~~~~~~~~~~~~~~~~~~~~ 

    reverse pipeline or reverse <txt>. 

jsb.plugs.db.infoitem 
~~~~~~~~~~~~~~~~~~~~~ 

    information items .. keyword/description pairs 

jsb.plugs.core.to 
~~~~~~~~~~~~~~~~~ 

    send output to another user .. used in a pipeline. 

myplugs.common 
~~~~~~~~~~~~~~ 

    this package contains all the plugins common to all drivers. 

jsb.plugs.core.test 
~~~~~~~~~~~~~~~~~~~ 

    test plugin. 

jsb.plugs.common.alarm 
~~~~~~~~~~~~~~~~~~~~~~ 

    the alarm plugin allows for alarms that message the user giving the
    command at a certain time or number of seconds from now 

jsb.plugs.common.imdb 
~~~~~~~~~~~~~~~~~~~~~ 

    query the imdb database. 

jsb.plugs.core.choice 
~~~~~~~~~~~~~~~~~~~~~ 

    the choice command can be used with a string or in a pipeline. 

jsb.plugs.socket.jira 
~~~~~~~~~~~~~~~~~~~~~ 

    jira.py - jsonbot module for performing lookups on a jira server
Copyright 2011, Richard Bateman

Special thanks to Sean B. Palmer for his phenny module; many of the ideas for
this were adapted from that plugin

http://inamidst.com/phenny/ 

jsb.plugs.common.quote 
~~~~~~~~~~~~~~~~~~~~~~ 

    manage quotes. 

jsb.plugs.socket.autovoice 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    do voice on join 

jsb.plugs.core.sort 
~~~~~~~~~~~~~~~~~~~ 

    sort bot results. 

jsb.plugs.core.count 
~~~~~~~~~~~~~~~~~~~~ 

    count number of items in result queue. 

jsb.plugs.common.seen 
~~~~~~~~~~~~~~~~~~~~~ 

    nick tracking. 

jsb.plugs.core.remotecallbacks 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    dispatch remote events. 

jsb.plugs.core.size 
~~~~~~~~~~~~~~~~~~~ 

    call a size() function in every module in sys.modules 

jsb.plugs.core.userstate 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    userstate is stored in jsondata/state/users/<username>. 

jsb.plugs.core.welcome 
~~~~~~~~~~~~~~~~~~~~~~ 

    send welcome message. 

jsb.plugs.common.forward 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    forward events occuring on a bot to another bot through xmpp. 

jsb.plugs.core.irc 
~~~~~~~~~~~~~~~~~~ 

    irc related commands. 

jsb.plugs.db.birthday 
~~~~~~~~~~~~~~~~~~~~~ 

    manage birthdays 

jsb.plugs.common.twitter 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    a twitter plugin for the JSONBOT, currently post only .. uses tweepy oauth. 

jsb.plugs.db.lists 
~~~~~~~~~~~~~~~~~~ 

    lists per user 

jsb.plugs.common.bugtracker 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

jsb.plugs.common.watcher 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    watch channels. channels events can be of remote origin. 

jsb.plugs.common.ipcalc 
~~~~~~~~~~~~~~~~~~~~~~~ 

    IP subnet calculator. this module allows you to perform network calculations. 

jsb.plugs.core.data 
~~~~~~~~~~~~~~~~~~~ 

    data dumper commands. 

jsb.plugs.core.botevent 
~~~~~~~~~~~~~~~~~~~~~~~ 

    provide handling of host/tasks/botevent tasks. 

jsb.plugs.core.plug 
~~~~~~~~~~~~~~~~~~~ 

    plugin management. 

jsb.plugs.common.urlinfo 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    Catches URLs on channel and gives information about them like title, image size, etc.
    Uses http://whatisthisfile.appspot.com/ via XMLRPC

    Example:
    19:20 <@raspi> http://www.youtube.com/watch?v=9RZ-hYPAMFQ
    19:20 <@bot> Title: "YouTube - Black Knight Holy Grail"
    19:28 <@raspi> test http://www.raspi.fi foobar http://raspi.fi/wp-includes/images/rss.png
    19:28 <@bot> 1. Title: "raspi.fi" Redirect: http://raspi.fi/  2. Image: 14x14 

jsb.plugs.common.karma 
~~~~~~~~~~~~~~~~~~~~~~ 

    maintain karma! 

jsb.plugs.socket.dns 
~~~~~~~~~~~~~~~~~~~~ 

    do a fqdn loopup. 

jsb.plugs.common.url 
~~~~~~~~~~~~~~~~~~~~ 

    maintain log of urls. 

jsb.plugs.core.core 
~~~~~~~~~~~~~~~~~~~ 

    core bot commands. 

jsb.plugs.socket.markov 
~~~~~~~~~~~~~~~~~~~~~~~ 

    Markov Talk for Gozerbot

The Chain:
    (predictate) -> [list of possible words]

TODO:
    - Propabilities
    - Start searching for full sentence, not just the first ORDER_K words 
      of a sentence

BHJTW:
    - adapted for JSONBOT 

jsb.plugs.common.plus 
~~~~~~~~~~~~~~~~~~~~~ 

    plugin to query the Google+ API. 

jsb.plugs.common.feedback 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    give feedback on the bot to bthate@gmail.com. needs a xmpp server, so use jsb-xmpp or jsb-fleet. 

jsb.plugs.db.karma2 
~~~~~~~~~~~~~~~~~~~ 

    karma plugin 

jsb.plugs.core.all 
~~~~~~~~~~~~~~~~~~ 

    output the outputcache to the user. 

myplugs.gae 
~~~~~~~~~~~ 

    this package contains all the plugins common to all drivers. 

jsb.lib.periodical 
~~~~~~~~~~~~~~~~~~ 

    provide a periodic structure. 

jsb.plugs.db.todo2 
~~~~~~~~~~~~~~~~~~ 

    provide todo related commands 

jsb.plugs.core.not 
~~~~~~~~~~~~~~~~~~ 

    negative grep. 

jsb.plugs.socket.mpd 
~~~~~~~~~~~~~~~~~~~~ 

    music player daemon control. 

jsb.plugs.core.grep 
~~~~~~~~~~~~~~~~~~~ 

    grep the output of bot comamnds. 

jsb.plugs.common.colors 
~~~~~~~~~~~~~~~~~~~~~~~ 

    use the morph to add color to selected words. 

jsb.plugs.socket.geo 
~~~~~~~~~~~~~~~~~~~~ 

    This product includes GeoLite data created by MaxMind, available from http://maxmind.com/ 

jsb.plugs.common.gcalc 
~~~~~~~~~~~~~~~~~~~~~~ 

    use google to calculate e.g. !gcalc 1 + 1 

jsb.plugs.core.outputcache 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    outputcache used when reply cannot directly be delivered. 

jsb.plugs.core.echo 
~~~~~~~~~~~~~~~~~~~ 

    echo typed sentences. 

jsb.plugs.common.ask 
~~~~~~~~~~~~~~~~~~~~ 

    ask a user a question and relay back the response. 

jsb.plugs.core.ignore 
~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

jsb.plugs.core.nickserv 
~~~~~~~~~~~~~~~~~~~~~~~ 

    authenticate to NickServ. 

jsb.plugs.common.relay 
~~~~~~~~~~~~~~~~~~~~~~ 

    relay to other users/channels. 

jsb.plugs.core.xmpp 
~~~~~~~~~~~~~~~~~~~ 

    xmpp related commands. 

jsb.plugs.core.gatekeeper 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    gatekeeper commands. 

jsb.plugs.common.rss 
~~~~~~~~~~~~~~~~~~~~ 

    the rss mantra is of the following:

    1) add a url with !rss-add <feedname> <url>
    2) use !rss-start <feed> in the channel you want the feed to appear
    3) run !rss-scan <feed> to see what tokens you can use .. add them with !rss-additem <feed> <token>
    4) change markup with !rss-addmarkup <feed> <markupitem> <value> .. see !rss-markuplist for possible markups
    5) check with !rss-feeds in a channel to see what feeds are running in a channel
    6) in case of trouble check !rss-running to see what feeds are monitored
    7) enjoy 

jsb.plugs.common.snarf 
~~~~~~~~~~~~~~~~~~~~~~ 

    fetch title of url. 

jsb.plugs.core.underauth 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    handle non-ident connection on undernet. 

jsb.plugs.db.quote2 
~~~~~~~~~~~~~~~~~~~ 

    quotes plugin 

jsb.plugs.core.user 
~~~~~~~~~~~~~~~~~~~ 

    users related commands. 

jsb.plugs.common.idle 
~~~~~~~~~~~~~~~~~~~~~ 

    show how long someone has been idle. 

jsb.plugs.core.chan 
~~~~~~~~~~~~~~~~~~~ 

    channel related commands. 

myplugs.socket.ps 
~~~~~~~~~~~~~~~~~ 

    show process status of the bot. 

jsb.plugs.core.admin 
~~~~~~~~~~~~~~~~~~~~ 

    admin related commands. these commands are mainly for maintaining the bot. 

jsb.plugs.common.controlchar 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    command to control the control (command) characters. The cc is a string 
    containing the allowed control characters. 

jsb.plugs.common.koffie 
~~~~~~~~~~~~~~~~~~~~~~~ 

    schenk wat koffie! 

jsb.plugs.socket.ops 
~~~~~~~~~~~~~~~~~~~~ 

    for op to work for a user the user must have the channel name in his/hers
    status .. use !user-addstatus <username> #channel
    normally the bot doesnt op nicks that join after a split to prevent floods, 
    this can be disabled by using ops-cfg oponsplit 1 

jsb.plugs.core.more 
~~~~~~~~~~~~~~~~~~~ 

    access the output cache. 

jsb.plugs.common.shop 
~~~~~~~~~~~~~~~~~~~~~ 

    maitain a shopping list (per user). 

jsb.plugs.core.dispatch 
~~~~~~~~~~~~~~~~~~~~~~~ 

    this is the dispatch plugin that dispatches events to commands. 

jsb.plugs.common.tinyurl 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    tinyurl.com feeder 

jsb.plugs.common.wikipedia 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    query wikipedia .. use countrycode to select a country specific wikipedia. 

jsb.plugs.common.spider 
~~~~~~~~~~~~~~~~~~~~~~~ 

    Spider plugin.. Spider websites and makes an index into them.

    taken from http://code.activestate.com/recipes/576551-simple-web-crawler/

    -- BHJTW 15-11-2011 Adapted for JSONBOT 

jsb.plugs.common.tour 
~~~~~~~~~~~~~~~~~~~~~ 

    do a tour of the bot. 

jsb.plugs.core.uniq 
~~~~~~~~~~~~~~~~~~~ 

    used in a pipeline .. unique elements. 

jsb.plugs.common.todo 
~~~~~~~~~~~~~~~~~~~~~ 

    manage todo lists per users .. a time/data string can be provided to set 
    time on a todo item. 

jsb.plugs.socket.kickban 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    kickban functionality for IRC. 

jsb.plugs.core.nickcapture 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    nick recapture callback. 

jsb.plugs.core.rc 
~~~~~~~~~~~~~~~~~ 

    jsonbot resource files .. files with the .jsb extension which consists of commands to be executed. 

jsb.plugs.core.misc 
~~~~~~~~~~~~~~~~~~~ 

    misc commands. 

jsb.plugs.common.8b 
~~~~~~~~~~~~~~~~~~~ 

    run the eight ball. 

jsb.plugs.core.alias 
~~~~~~~~~~~~~~~~~~~~ 

    this alias plugin allows aliases for commands to be added. aliases are in
    the form of <alias> -> <command> .. aliases to aliases are not allowed, 
    aliases are per channel. 

jsb.plugs.socket.udp 
~~~~~~~~~~~~~~~~~~~~ 

    the bot has the capability to listen for udp packets which it will use
    to /msg a given nick or channel.

    1) setup

        * do !reload udp to enable the udp plugin
        * call !udp-cfgsave to generate a config file in gozerdata/plugs/udp/config
        * edit this file .. esp. look at the udpallowednicks list
        * run ./bin/jsb-udp -s to generate clientside config file "udp-send"
        * edit this file
        * test with:

        ::

            echo "YOOO" | ./bin/jsb-udp

    2) limiter

        on IRC the bot's /msg to a user/channel are limited to 1 per 3 seconds so the
        bot will not excessflood on the server. you can use partyudp if you need no 
        delay between sent messages, this will use dcc chat to deliver the message.
        on jabber bots there is no delay 

jsb.plugs.common.hubbub 
~~~~~~~~~~~~~~~~~~~~~~~ 

    the hubbub mantra is of the following:
    use the hb-register <feedname> <url> command to register url and start a feed in in one pass. 

= PLUGINLIST=

==============



== jsb.plugs.socket.github == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

== jsb.plugs.core.tail == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    tail bot results. 

== jsb.plugs.socket.restserver == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    implements a REST server, soon to be adapted for use with the jsb-tornado program. 

== jsb.plugs.common.topic == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    manage topics. 

== jsb.plugs.common.search == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    access stats data from the spider plugin. 

== jsb.plugs.socket.fisheye == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

== jsb.plugs.common.learn == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    learn information items .. facts .. factoids. 

== jsb.plugs.socket.confluence == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    confluence.py - jsonbot module for performing lookups on a confluence server
Copyright 2011, Richard Bateman

Special thanks to Sean B. Palmer for his phenny module; many of the ideas for
this were adapted from that plugin

http://inamidst.com/phenny/ 

== jsb.plugs.core.fleet == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    The fleet makes it possible to run multiple bots in one running instance.
    It is a list of bots. This plugin provides commands to manipulate this list of bots. 

== jsb.plugs.socket.irccat == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    irccat.py - jsonbot "irccat" Module
Copyright 2011, Richard Bateman
Licensed under the New BSD License.

Written to be used in the #firebreath IRC channel: http://www.firebreath.org

To test, set up the host and port, then use something like:

echo "@taxilian I am awesome" | netcat -g0 localhost 54321

echo "#channel I am awesome" | netcat -g0 localhost 54321

you can specify multiple users (with @) and channels (with #) by seperating them
with commas.  Not that with jabber, channels tend to be treated as users
unless you set up an alias in your channel:

!irccat_add_alias #channel 

== myplugs.socket == 
~~~~~~~~~~~~~~~~~~~~ 

    this package contains all the plugins common to all drivers. 

== jsb.plugs.common.remind == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    remind people .. say txt when somebody gets active 

== jsb.plugs.socket.chatlog == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    log channels to [hour:min] <nick> txt format, only logging to files is supported right now. 

== jsb.plugs.common.weather == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    show weather based on Google's weather API 

== jsb.plugs.socket.lmgt == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

== jsb.plugs.core.reverse == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    reverse pipeline or reverse <txt>. 

== jsb.plugs.db.infoitem == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    information items .. keyword/description pairs 

== jsb.plugs.core.to == 
~~~~~~~~~~~~~~~~~~~~~~~ 

    send output to another user .. used in a pipeline. 

== myplugs.common == 
~~~~~~~~~~~~~~~~~~~~ 

    this package contains all the plugins common to all drivers. 

== jsb.plugs.core.test == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    test plugin. 

== jsb.plugs.common.alarm == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    the alarm plugin allows for alarms that message the user giving the
    command at a certain time or number of seconds from now 

== jsb.plugs.common.imdb == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    query the imdb database. 

== jsb.plugs.core.choice == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    the choice command can be used with a string or in a pipeline. 

== jsb.plugs.socket.jira == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    jira.py - jsonbot module for performing lookups on a jira server
Copyright 2011, Richard Bateman

Special thanks to Sean B. Palmer for his phenny module; many of the ideas for
this were adapted from that plugin

http://inamidst.com/phenny/ 

== jsb.plugs.common.quote == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    manage quotes. 

== jsb.plugs.socket.autovoice == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    do voice on join 

== jsb.plugs.core.sort == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    sort bot results. 

== jsb.plugs.core.count == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    count number of items in result queue. 

== jsb.plugs.common.seen == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    nick tracking. 

== jsb.plugs.core.remotecallbacks == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    dispatch remote events. 

== jsb.plugs.core.size == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    call a size() function in every module in sys.modules 

== jsb.plugs.core.userstate == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    userstate is stored in jsondata/state/users/<username>. 

== jsb.plugs.core.welcome == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    send welcome message. 

== jsb.plugs.common.forward == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    forward events occuring on a bot to another bot through xmpp. 

== jsb.plugs.core.irc == 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    irc related commands. 

== jsb.plugs.db.birthday == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    manage birthdays 

== jsb.plugs.common.twitter == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    a twitter plugin for the JSONBOT, currently post only .. uses tweepy oauth. 

== jsb.plugs.db.lists == 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    lists per user 

== jsb.plugs.common.bugtracker == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

== jsb.plugs.common.watcher == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    watch channels. channels events can be of remote origin. 

== jsb.plugs.common.ipcalc == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    IP subnet calculator. this module allows you to perform network calculations. 

== jsb.plugs.core.data == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    data dumper commands. 

== jsb.plugs.core.botevent == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    provide handling of host/tasks/botevent tasks. 

== jsb.plugs.core.plug == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    plugin management. 

== jsb.plugs.common.urlinfo == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    Catches URLs on channel and gives information about them like title, image size, etc.
    Uses http://whatisthisfile.appspot.com/ via XMLRPC

    Example:
    19:20 <@raspi> http://www.youtube.com/watch?v=9RZ-hYPAMFQ
    19:20 <@bot> Title: "YouTube - Black Knight Holy Grail"
    19:28 <@raspi> test http://www.raspi.fi foobar http://raspi.fi/wp-includes/images/rss.png
    19:28 <@bot> 1. Title: "raspi.fi" Redirect: http://raspi.fi/  2. Image: 14x14 

== jsb.plugs.common.karma == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    maintain karma! 

== jsb.plugs.socket.dns == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    do a fqdn loopup. 

== jsb.plugs.common.url == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    maintain log of urls. 

== jsb.plugs.core.core == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    core bot commands. 

== jsb.plugs.socket.markov == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    Markov Talk for Gozerbot

The Chain:
    (predictate) -> [list of possible words]

TODO:
    - Propabilities
    - Start searching for full sentence, not just the first ORDER_K words 
      of a sentence

BHJTW:
    - adapted for JSONBOT 

== jsb.plugs.common.plus == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    plugin to query the Google+ API. 

== jsb.plugs.common.feedback == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    give feedback on the bot to bthate@gmail.com. needs a xmpp server, so use jsb-xmpp or jsb-fleet. 

== jsb.plugs.db.karma2 == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    karma plugin 

== jsb.plugs.core.all == 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    output the outputcache to the user. 

== myplugs.gae == 
~~~~~~~~~~~~~~~~~ 

    this package contains all the plugins common to all drivers. 

== jsb.lib.periodical == 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    provide a periodic structure. 

== jsb.plugs.db.todo2 == 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    provide todo related commands 

== jsb.plugs.core.not == 
~~~~~~~~~~~~~~~~~~~~~~~~ 

    negative grep. 

== jsb.plugs.socket.mpd == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    music player daemon control. 

== jsb.plugs.core.grep == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    grep the output of bot comamnds. 

== jsb.plugs.common.colors == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    use the morph to add color to selected words. 

== jsb.plugs.socket.geo == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    This product includes GeoLite data created by MaxMind, available from http://maxmind.com/ 

== jsb.plugs.common.gcalc == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    use google to calculate e.g. !gcalc 1 + 1 

== jsb.plugs.core.outputcache == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    outputcache used when reply cannot directly be delivered. 

== jsb.plugs.core.echo == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    echo typed sentences. 

== jsb.plugs.common.ask == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    ask a user a question and relay back the response. 

== jsb.plugs.core.ignore == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    no docstring available

== jsb.plugs.core.nickserv == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    authenticate to NickServ. 

== jsb.plugs.common.relay == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    relay to other users/channels. 

== jsb.plugs.core.xmpp == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    xmpp related commands. 

== jsb.plugs.core.gatekeeper == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    gatekeeper commands. 

== jsb.plugs.common.rss == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    the rss mantra is of the following:

    1) add a url with !rss-add <feedname> <url>
    2) use !rss-start <feed> in the channel you want the feed to appear
    3) run !rss-scan <feed> to see what tokens you can use .. add them with !rss-additem <feed> <token>
    4) change markup with !rss-addmarkup <feed> <markupitem> <value> .. see !rss-markuplist for possible markups
    5) check with !rss-feeds in a channel to see what feeds are running in a channel
    6) in case of trouble check !rss-running to see what feeds are monitored
    7) enjoy 

== jsb.plugs.common.snarf == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    fetch title of url. 

== jsb.plugs.core.underauth == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    handle non-ident connection on undernet. 

== jsb.plugs.db.quote2 == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    quotes plugin 

== jsb.plugs.core.user == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    users related commands. 

== jsb.plugs.common.idle == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    show how long someone has been idle. 

== jsb.plugs.core.chan == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    channel related commands. 

== myplugs.socket.ps == 
~~~~~~~~~~~~~~~~~~~~~~~ 

    show process status of the bot. 

== jsb.plugs.core.admin == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    admin related commands. these commands are mainly for maintaining the bot. 

== jsb.plugs.common.controlchar == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    command to control the control (command) characters. The cc is a string 
    containing the allowed control characters. 

== jsb.plugs.common.koffie == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    schenk wat koffie! 

== jsb.plugs.socket.ops == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    for op to work for a user the user must have the channel name in his/hers
    status .. use !user-addstatus <username> #channel
    normally the bot doesnt op nicks that join after a split to prevent floods, 
    this can be disabled by using ops-cfg oponsplit 1 

== jsb.plugs.core.more == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    access the output cache. 

== jsb.plugs.common.shop == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    maitain a shopping list (per user). 

== jsb.plugs.core.dispatch == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    this is the dispatch plugin that dispatches events to commands. 

== jsb.plugs.common.tinyurl == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    tinyurl.com feeder 

== jsb.plugs.common.wikipedia == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    query wikipedia .. use countrycode to select a country specific wikipedia. 

== jsb.plugs.common.spider == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    Spider plugin.. Spider websites and makes an index into them.

    taken from http://code.activestate.com/recipes/576551-simple-web-crawler/

    -- BHJTW 15-11-2011 Adapted for JSONBOT 

== jsb.plugs.common.tour == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    do a tour of the bot. 

== jsb.plugs.core.uniq == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    used in a pipeline .. unique elements. 

== jsb.plugs.common.todo == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    manage todo lists per users .. a time/data string can be provided to set 
    time on a todo item. 

== jsb.plugs.socket.kickban == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    kickban functionality for IRC. 

== jsb.plugs.core.nickcapture == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    nick recapture callback. 

== jsb.plugs.core.rc == 
~~~~~~~~~~~~~~~~~~~~~~~ 

    jsonbot resource files .. files with the .jsb extension which consists of commands to be executed. 

== jsb.plugs.core.misc == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    misc commands. 

== jsb.plugs.common.8b == 
~~~~~~~~~~~~~~~~~~~~~~~~~ 

    run the eight ball. 

== jsb.plugs.core.alias == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    this alias plugin allows aliases for commands to be added. aliases are in
    the form of <alias> -> <command> .. aliases to aliases are not allowed, 
    aliases are per channel. 

== jsb.plugs.socket.udp == 
~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    the bot has the capability to listen for udp packets which it will use
    to /msg a given nick or channel.

    1) setup

        * do !reload udp to enable the udp plugin
        * call !udp-cfgsave to generate a config file in gozerdata/plugs/udp/config
        * edit this file .. esp. look at the udpallowednicks list
        * run ./bin/jsb-udp -s to generate clientside config file "udp-send"
        * edit this file
        * test with:

        ::

            echo "YOOO" | ./bin/jsb-udp

    2) limiter

        on IRC the bot's /msg to a user/channel are limited to 1 per 3 seconds so the
        bot will not excessflood on the server. you can use partyudp if you need no 
        delay between sent messages, this will use dcc chat to deliver the message.
        on jabber bots there is no delay 

== jsb.plugs.common.hubbub == 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

    the hubbub mantra is of the following:
    use the hb-register <feedname> <url> command to register url and start a feed in in one pass. 

